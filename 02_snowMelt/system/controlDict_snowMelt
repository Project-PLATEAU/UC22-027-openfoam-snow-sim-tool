/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1906                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs (turbulenceModelSchemes);

application     snowMelt;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         501;

deltaT          1;

writeControl    timeStep;

writeInterval   1; // 100;

purgeWrite      0;

writeFormat     ascii;

writePrecision   8;

writeCompression off;

timeFormat      general;

timePrecision   8;

runTimeModifiable true;

functions
{

    fieldMinMax
    {
        type                fieldMinMax;
        functionObjectLibs  ("libfieldFunctionObjects.so");
        log                 yes;
        outputControl       timeStep;
        outputInterval      1;
        mode                magnitude;
        fields              ( U p T);
    }   

    snowDepthAfterRadiationVTK
    {
        type            surfaces;
        functionObjectLibs ( "libsampling.so" );
        outputControl   outputTime;
        //writeControl       timeStep;
        //writeInterval      1;     
        surfaceFormat   vtk;
        fields          ( snowDepth );
        interpolationScheme cellPoint;
        surfaces
        (
          /*roof
          {
              type patch;
              patches ( roofInside );
              interpolate true;
          }*/
          roof
          {
              type patch;
			  patches ("roof.*");
              interpolate true;
          }
          ground
          {
              type patch;
			  patches ("ground.*");
              interpolate true;
          }
        );
    } 

    snowDepthAfterRadiationEnsight
    {
        type            surfaces;
        functionObjectLibs ( "libsampling.so" );
        outputControl   outputTime;
        //writeControl       timeStep;
        //writeInterval      1;     
        surfaceFormat   ensight;
        fields          ( snowDepth );
        interpolationScheme cellPoint;
        surfaces
        (
          /*roof
          {
              type patch;
              patches ( roofInside );
              interpolate true;
          }*/
          roof
          {
              type patch;
			  patches ("roof.*");
              interpolate true;
          }
          ground
          {
              type patch;
			  patches ("ground.*");
              interpolate true;
          }
        );
    }     
}

// ************************************************************************* //
